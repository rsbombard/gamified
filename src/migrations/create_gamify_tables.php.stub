<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateGamifyTables extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        // Xp Table
        Schema::create('xp', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('description')->nullable();
            $table->double('xp');
            $table->string('class')->nullable();
            $table->boolean('allow_duplicate')->default(false);
            $table->unsignedBigInteger('gamify_group_id');
            $table->timestamps();
        });

        // Badges Table
        Schema::create('badges', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('description')->nullable();
            $table->string('image')->nullable();
            $table->string('class')->nullable();
            $table->unsignedBigInteger('level')->nullable();
            $table->unsignedBigInteger('gamify_group_id')->nullable();
            $table->timestamps();
        });

        // Quests Table
        Schema::create('quests', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('description')->nullable();
            $table->string('image')->nullable();
            $table->string('class')->nullable();
            $table->string('reward_type')->nullable();
            $table->string('reward_description')->nullable();
            $table->string('requirement_type')->nullable(); //unique_offers,user_level,daily_reset, days_in_row
            $table->string('requirement_conditions', 500)->nullable(); //json representation of conditions {'unique': ['ad-gem','playtime','adscend-media']}
            $table->string('action_url')->nullable();
            $table->string('progress_event')->nullable(); //quest event that triggers progress
            $table->string('geos', 500)->default("[\"all\"]")->nullable();
            $table->integer("max_user_completions")->default(0);
            $table->integer('actions_required')->default(1)->nullable();
            $table->integer('min_level')->default(0)->nullable();
            $table->integer('reward')->nullable();
            $table->boolean('premium_only')->default(false);
            $table->timestamp("start_date")->nullable();
            $table->timestamp("end_date")->nullable();
            $table->unsignedBigInteger('completions')->default(0)->nullable();
            $table->timestamps();

            $table->index("start_date");
            $table->index("end_date");
            $table->index("min_level");
            $table->index("reward");
            $table->index("completions");
        });

        // Quests Table
        Schema::create('user_quests', function (Blueprint $table) {
            $table->id();
            $table->string('status')->default("in_progress")->nullable();
            $table->unsignedBigInteger('quest_id')->nullable();
            $table->unsignedBigInteger('user_id')->nullable();
            $table->unsignedBigInteger('progress')->nullable();
            $table->integer('percent_progress')->nullable();
            $table->integer('actions_today')->default(0); //how many times has this been updated today? For keeping track of streak based quests
            $table->integer('actions_yesterday')->default(0); //how many times has this been updated yesterday? For keeping track of streak based quests
            $table->unsignedBigInteger('num_completions')->nullable();
            $table->string("progress_identifiers", 500)->nullable(); //json array of recorded progress (offer walls, unique tasks etc.)
            $table->timestamp("start_date")->nullable();
            $table->timestamp("finish_date")->nullable();
            $table->timestamps();

            $table->index("quest_id");
            $table->index("user_id");
            $table->index("status");
        });


        // Group table
        Schema::create('gamify_groups', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->enum('type', ['badge', 'xp']);
            $table->timestamps();
        });

        // Xpables  table
        Schema::create('xpables', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('xp_id');
            $table->morphs('xpable');
            $table->double('achieved_xp')->default(0);
            $table->timestamps();
        });

        // Badgables table
        Schema::create('badgables', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('badge_id');
            $table->morphs('badgable');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('badges');
        Schema::dropIfExists('gamify_groups');
        Schema::dropIfExists('xp');
        Schema::dropIfExists('xpables');
        Schema::dropIfExists('badgables');
        Schema::dropIfExists('quests');
        Schema::dropIfExists('user_quests');
    }
}
